services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      # Keep vendor inside container so it's not shadowed by the bind mount
      - /app/vendor
      - ./storage:/app/storage
    environment:
      APP_ENV: local
      APP_DEBUG: 'true'
      APP_URL: http://localhost:8000
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: mydb
      DB_USERNAME: user
      DB_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy
    networks:
      - application
    command: >
      sh -c "
        [ -f .env ] || printf 'APP_NAME=Laravel\nAPP_ENV=local\nAPP_KEY=\nAPP_DEBUG=true\nAPP_URL=http://localhost\nLOG_CHANNEL=stack\nLOG_LEVEL=debug\nDB_CONNECTION=mysql\nDB_HOST=db\nDB_PORT=3306\nDB_DATABASE=mydb\nDB_USERNAME=user\nDB_PASSWORD=password\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nFILESYSTEM_DISK=local\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\n' > .env; \
        composer install --no-interaction --prefer-dist --optimize-autoloader && \
        php artisan key:generate --force && \
        php artisan migrate --seed --force && \
        php artisan serve --host=0.0.0.0 --port=8000
      "

  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - dbdata:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -proot --silent"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 5s
    networks:
      - application

volumes:
  dbdata:

networks:
  application:
